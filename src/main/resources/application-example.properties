# =========================================
# 서버 및 포트 설정 (배포용)
# =========================================
# 클라우드 환경의 PORT 환경변수를 우선 사용하고, 없으면 8080 포트를 사용합니다.
server.port=${PORT:8080}


# =========================================
# 데이터베이스 연결 설정 (MySQL)
# =========================================
# [수정] 환경 변수를 사용하도록 ${} 문법을 다시 추가했습니다.
# 이렇게 해야 서버 실행 시 외부에서 DB 정보를 주입할 수 있습니다.
spring.datasource.url=${DATABASE_URL:jdbc:mysql://localhost:3306/skincaredb}
spring.datasource.username=root
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# =========================================
# JPA & Hibernate 설정
# =========================================
# [안정성] 'update' -> 'validate'로 변경
# 운영 서버에서 코드가 DB 구조를 마음대로 바꾸는 것을 막아 데이터를 안전하게 보호합니다.
spring.jpa.hibernate.ddl-auto=update
# [성능] 'true' -> 'false'로 변경
# 배포 환경에서는 불필요한 SQL 로그를 콘솔에 출력하지 않아 성능을 향상시킵니다.
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true


# =========================================
# 로깅 설정
# =========================================
# [성능] 'DEBUG' -> 'info'로 변경
# SQL 문 로그 레벨을 조정하여 콘솔 출력을 막습니다.
logging.level.org.hibernate.SQL=info
# [성능] 아래 라인은 반드시 삭제 또는 주석 처리해야 합니다.
# 'trace' 로그는 모든 파라미터 값을 기록하여 서버에 심각한 성능 저하를 유발합니다.
# logging.level.org.hibernate.type.descriptor.sql=trace


# =========================================
# JPA & 템플릿 엔진 & 정적 리소스 설정 (기존과 동일)
# =========================================
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8
spring.web.resources.static-locations=classpath:/static/


# =========================================
# 외부 서비스 설정 (OCR)
# =========================================
# [경로 수정] JAR 내부 경로가 아닌, 서버의 실제 외부 경로를 사용하도록 변경합니다.
# 이 경로는 실제 서버 환경에 맞게 수정해야 합니다. (예: C:/app/tessdata)
tess4j.datapath=${TESSDATA_PATH:/app/tessdata}

